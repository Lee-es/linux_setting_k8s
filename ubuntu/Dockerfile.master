FROM ubuntu:22.04

# ----------------------------------------
# 환경 변수 설정
# ----------------------------------------
ENV container=docker
ENV DEBIAN_FRONTEND=noninteractive
ENV PATH="/root/.cargo/bin:${PATH}"
ENV ZSH_CUSTOM=/root/.oh-my-zsh/custom

# ----------------------------------------
# 필수 시스템 도구 설치
# ----------------------------------------
RUN apt-get update && \
    apt-get install -y \
        systemd systemd-sysv dbus sudo \
        curl wget gnupg2 ca-certificates lsb-release \
        iproute2 iptables git zsh tar \
        procps man-db manpages less && \
    apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# ----------------------------------------
# Kubernetes 바이너리 설치
# ----------------------------------------
RUN curl -LO https://dl.k8s.io/release/v1.29.3/bin/linux/arm64/kubeadm && \
    curl -LO https://dl.k8s.io/release/v1.29.3/bin/linux/arm64/kubectl && \
    curl -LO https://dl.k8s.io/release/v1.29.3/bin/linux/arm64/kubelet && \
    chmod +x kubeadm kubectl kubelet && \
    mv kubeadm kubectl kubelet /usr/bin/

# ----------------------------------------
# kubelet systemd 서비스 등록
# ----------------------------------------
RUN mkdir -p /etc/systemd/system/kubelet.service.d && \
    cat <<EOF > /etc/systemd/system/kubelet.service
[Unit]
Description=Kubernetes Kubelet Server
Documentation=https://kubernetes.io/docs/
After=network.target

[Service]
ExecStart=/usr/bin/kubelet
Restart=always
StartLimitInterval=0
RestartSec=10

[Install]
WantedBy=multi-user.target
EOF

# ----------------------------------------
# containerd 설치 및 systemd 등록
# ----------------------------------------
RUN curl -LO https://github.com/containerd/containerd/releases/download/v1.7.13/containerd-1.7.13-linux-arm64.tar.gz && \
    tar -C /usr/local -xzf containerd-1.7.13-linux-arm64.tar.gz && \
    rm containerd-1.7.13-linux-arm64.tar.gz && \
    ln -s /usr/local/bin/containerd /usr/bin/containerd && \
    cat <<EOF > /lib/systemd/system/containerd.service
[Unit]
Description=containerd container runtime
Documentation=https://containerd.io
After=network.target

[Service]
ExecStart=/usr/local/bin/containerd
Restart=always
Delegate=yes
KillMode=process
OOMScoreAdjust=-999
LimitNOFILE=1048576
LimitNPROC=infinity
LimitCORE=infinity

[Install]
WantedBy=multi-user.target
EOF

# ----------------------------------------
# Neovim 설치 (공식 ARM64 빌드)
# ※ 필요하지 않으면 아래 블록을 주석 처리하세요
# ----------------------------------------
RUN curl -LO https://github.com/neovim/neovim/releases/download/stable/nvim-linux-arm64.tar.gz && \
    tar xzf nvim-linux-arm64.tar.gz && \
    mv nvim-linux-* /opt/nvim && \
    ln -s /opt/nvim/bin/nvim /usr/local/bin/nvim && \
    rm nvim-linux-arm64.tar.gz

# ----------------------------------------
# oh-my-zsh / LunarVim 의존성 도구 설치
# ※ 필요하지 않으면 아래 블록을 주석 처리하세요
# ----------------------------------------
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - && \
    apt-get update && \
    apt-get install -y nodejs gcc make && \
    curl https://sh.rustup.rs -sSf | sh -s -- -y && \
    apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# ----------------------------------------
# oh-my-zsh + LunarVim 설치
# ※ 필요하지 않으면 아래 블록을 주석 처리하세요
# ----------------------------------------
RUN sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended && \
    git clone https://github.com/zsh-users/zsh-autosuggestions.git $ZSH_CUSTOM/plugins/zsh-autosuggestions && \
    bash -c "$(curl -s https://raw.githubusercontent.com/lunarvim/lunarvim/master/utils/installer/install.sh)" -- -y --nvim-path /usr/local/bin/nvim

# ----------------------------------------
# oh-my-zsh 외부 테마 및 플러그인 설치
# ※ 필요하지 않으면 아래 블록을 주석 처리하세요
# ----------------------------------------
RUN git clone https://github.com/zsh-users/zsh-syntax-highlighting.git $ZSH_CUSTOM/plugins/zsh-syntax-highlighting && \
    git clone https://github.com/zsh-users/zsh-completions $ZSH_CUSTOM/plugins/zsh-completions && \
    git clone https://github.com/changyuheng/zsh-interactive-cd.git $ZSH_CUSTOM/plugins/zsh-interactive-cd && \
    git clone https://github.com/1Password/1password-omz.git $ZSH_CUSTOM/plugins/1password && \
    git clone --depth=1 https://github.com/romkatv/powerlevel10k.git $ZSH_CUSTOM/themes/powerlevel10k

# ----------------------------------------
# 설정 파일 복사
# ※ 필요하지 않으면 아래 블록을 주석 처리하세요
# ----------------------------------------
RUN mkdir -p /root/.config/lvim
COPY config.lua /root/.config/lvim/config.lua
COPY .zshrc /root/.zshrc

# ----------------------------------------
# systemd 실행 설정
# ----------------------------------------
VOLUME ["/sys/fs/cgroup"]
STOPSIGNAL SIGRTMIN+3
CMD ["/lib/systemd/systemd"]